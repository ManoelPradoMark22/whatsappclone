{"version":3,"sources":["styles/global.js","Api.js","firebaseConfig.js","components/ChatListItem/styles.js","components/ChatListItem/index.js","components/ChatIntro/styles.js","components/ChatIntro/index.js","components/MessageItem/styles.js","components/MessageItem/index.js","components/ChatWindow/styles.js","components/ChatWindow/index.js","components/NewChat/styles.js","components/NewChat/index.js","pages/Login/styles.js","pages/Login/index.js","pages/Dashboard/styles.js","pages/Dashboard/index.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","fbPopup","a","provider","auth","FacebookAuthProvider","signInWithPopup","result","addUser","u","collection","doc","id","set","name","avatar","merge","getContactList","userId","list","get","forEach","data","push","addNewChat","user","user2","add","messages","users","newChat","update","chats","FieldValue","arrayUnion","chatId","title","image","with","onChatList","setChatList","onSnapshot","exists","sort","b","undefined","lastMessageDate","seconds","onChatContent","setList","setUsers","sendMessage","chatData","type","body","now","Date","author","date","i","uData","e","lastMessage","Container","styled","div","props","active","Content","Line","Name","Hour","LastMessage","ChatListItem","onClick","useState","time","setTime","useEffect","d","hours","getHours","minutes","getMinutes","src","alt","ChatIntro","isAuthor","MessageContent","MessageText","MessageDate","MessageItem","Header","HeaderInfo","HeaderButtons","Button","colorActive","Body","EmojiArea","Footer","LeftFooterContent","InputArea","RightFooterContent","ChatWindow","useRef","recognition","SpeechRecognition","window","webkitSpeechRecognition","emojiOpen","setEmojiOpen","text","setText","listening","setListening","handleSendClick","Api","current","scrollHeight","offsetHeight","scrollTop","ref","map","item","key","style","height","onEmojiClick","emojiObject","emoji","disableSearchBar","disableSkinTonePicker","width","placeholder","value","onChange","target","onKeyUp","keyCode","onstart","onend","onresult","results","transcript","start","show","BackButton","HeaderTitle","List","Contact","ContactName","NewChat","chatlist","setShow","handleClose","getList","Login","onReceive","alert","SideBar","SideBarHeader","SideBarHeaderButtons","HeaderButton","Search","SearchInput","ChatList","ContentArea","Dashboard","setChatlist","activeChat","setActiveChat","setUser","showNewChat","setShowNewChat","newUser","uid","displayName","photoURL","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ec131b4.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  :root {\r\n    --background: #EDEDED;\r\n    --background-hover: #F5F5F5;\r\n    --background-light: #F6F6F6;\r\n    --backgroundBody: #D2DBDC;\r\n    --backgroundBodyChat: #E5DDD5;\r\n    --backgroundChat: #F8F9FA;\r\n    --backgroundChatActive: #EBEBEB;\r\n    \r\n    --primary: #00bfa5;\r\n    --primary-active: #009688;\r\n    --primary-light: #4ADF83;\r\n\r\n    --messageAuthor: #DCF8C6;\r\n    \r\n    --iconColor: #919191;\r\n    --iconMicActive: #126ECE;\r\n\r\n    --divide: #DDDDDD;\r\n    --divide-medium: #CCCCCC;\r\n    --divide-light: #EEEEEE;    \r\n    \r\n    --shape: #FFFFFF;\r\n    --text-dark: #000000;\r\n    --text-medium: #525252;\r\n    --text-submedium: #777777;\r\n    --text-light: #999999;\r\n\r\n    --inputChat: #4a4a4a;\r\n\r\n    --scroolbar: rgba(0, 0, 0, 0.2);\r\n  }\r\n\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 6px;\r\n  }\r\n\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: var(--scroolbar);\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  html {\r\n    @media (max-width: 1080px) {\r\n      font-size: 93.75%; //15px\r\n    }\r\n\r\n    @media (max-width: 720px) {\r\n      font-size: 87.5%; //14px\r\n    }\r\n  }\r\n\r\n  body {\r\n    background-color: var(---backgroundBody);\r\n    -webkit-font-smoothing: antialiased;\r\n    margin: 0;\r\n    font-family: 'Segoe UI', Helvetica Neue, Helvetica, Lucida Grande, Arial;\r\n  }\r\n`;\r\n","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\nimport firebaseConfig from './firebaseConfig';\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\n\r\n\r\nexport default {\r\n  fbPopup:async () => {\r\n    const provider = new firebase.auth.FacebookAuthProvider();\r\n    let result = await firebaseApp.auth().signInWithPopup(provider);\r\n    return result;\r\n  },\r\n  addUser:async (u) => {\r\n    await db.collection('users').doc(u.id).set({\r\n      name: u.name,\r\n      avatar: u.avatar\r\n    }, {merge:true})\r\n  },\r\n  getContactList:async (userId) => {\r\n    let list = [];\r\n\r\n    let results = await db.collection('users').get();\r\n    results.forEach(result => {\r\n      let data = result.data();\r\n\r\n      if (result.id !== userId) {\r\n        list.push({\r\n          id: result.id,\r\n          name: data.name,\r\n          avatar: data.avatar\r\n        })\r\n      }\r\n    });\r\n\r\n    return list;\r\n  },\r\n  addNewChat:async (user, user2) => {\r\n    let newChat = await db.collection('chats').add({\r\n      messages: [],\r\n      users: [user.id, user2.id]\r\n    });\r\n\r\n    db.collection('users').doc(user.id).update({\r\n      chats: firebase.firestore.FieldValue.arrayUnion({\r\n        chatId: newChat.id,\r\n        title: user2.name,\r\n        image: user2.avatar,\r\n        with: user2.id\r\n      })\r\n    });\r\n\r\n    db.collection('users').doc(user2.id).update({\r\n      chats: firebase.firestore.FieldValue.arrayUnion({\r\n        chatId: newChat.id,\r\n        title: user.name,\r\n        image: user.avatar,\r\n        with: user.id\r\n      })\r\n    });\r\n  },\r\n  onChatList:(userId, setChatList) => {\r\n    return db.collection('users').doc(userId).onSnapshot((doc) => {\r\n      if(doc.exists) {\r\n        let data = doc.data();\r\n\r\n        if(data.chats){\r\n          let chats = [...data.chats];\r\n\r\n          chats.sort((a,b) => {\r\n            if (a.lastMessageDate === undefined) {\r\n              return -1;\r\n            }\r\n            if (b.lastMessageDate === undefined) {\r\n              return -1;\r\n            }\r\n            if (a.lastMessageDate.seconds < b.lastMessageDate.seconds) {\r\n              return 1;\r\n            } else {\r\n              return -1;\r\n            }\r\n          });\r\n\r\n          setChatList(data.chats);\r\n        }\r\n      }\r\n    });\r\n  },\r\n  onChatContent:(chatId, setList, setUsers) => {\r\n    return db.collection('chats').doc(chatId).onSnapshot((doc) => {\r\n      if(doc.exists) {\r\n        let data = doc.data();\r\n        setList(data.messages);\r\n        setUsers(data.users);\r\n      }\r\n    })\r\n  },\r\n  sendMessage:async (chatData, userId, type, body, users) => {\r\n    let now = new Date();\r\n    \r\n    db.collection('chats').doc(chatData.chatId).update({\r\n      messages: firebase.firestore.FieldValue.arrayUnion({\r\n        type,\r\n        author: userId,\r\n        body,\r\n        date: now\r\n      })\r\n    });\r\n\r\n    for (let i in users) {\r\n      let u = await db.collection('users').doc(users[i]).get();\r\n      let uData = u.data();\r\n      if (uData.chats){\r\n        let chats = [...uData.chats];\r\n\r\n        for (let e in chats) {\r\n          if(chats[e].chatId === chatData.chatId) {\r\n            chats[e].lastMessage = body;\r\n            chats[e].lastMessageDate = now;\r\n          }\r\n        }\r\n\r\n        await db.collection('users').doc(users[i]).update({\r\n          chats\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","export default {\r\n  apiKey: \"AIzaSyBEYAACIy-vHjt-XR760e8Mqvk2_8alsN0\",\r\n  authDomain: \"whatsappclone-5c937.firebaseapp.com\",\r\n  projectId: \"whatsappclone-5c937\",\r\n  storageBucket: \"whatsappclone-5c937.appspot.com\",\r\n  messagingSenderId: \"244250919428\",\r\n  appId: \"1:244250919428:web:861164f11859ddd859eb51\"\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  height: 70px;\r\n\r\n  img {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 25px;\r\n    margin-left: 15px;\r\n  }\r\n\r\n  background-color: ${(props) => props.active && 'var(--backgroundChatActive)'};\r\n\r\n  &:hover {\r\n    background-color: ${(props) => !props.active && 'var(--background-hover)'};\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  border-bottom: 1px solid var(--divide-light);\r\n  padding-right: 15px;\r\n  margin-left: 15px;\r\n\r\n  flex-wrap: wrap;\r\n  min-width: 0;\r\n`;\r\n\r\nexport const Line = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n  font-size: 17px;\r\n  color: var(--text-dark);\r\n  flex-wrap: wrap;\r\n  min-width: 0;\r\n\r\n  p {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Hour = styled.div`\r\n  font-size: 12px;\r\n  color: var(--text-light);\r\n`;\r\n\r\nexport const LastMessage = styled.div`\r\n  font-size: 14px;\r\n  color: var(--text-light);\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  p {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    margin: 0;\r\n  }\r\n`;","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  Container,\r\n  Content,\r\n  Line,\r\n  Name,\r\n  Hour,\r\n  LastMessage\r\n} from './styles';\r\n\r\nexport function ChatListItem({onClick, active, data}) {\r\n  const [time, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n     if(data.lastMessageDate > 0) {\r\n        let d = new Date(data.lastMessageDate.seconds * 1000);\r\n        let hours = d.getHours();\r\n        let minutes = d.getMinutes();\r\n\r\n        hours = hours < 10 ? '0'+hours : hours;\r\n        minutes = minutes < 10 ? '0'+minutes : minutes;\r\n\r\n        setTime(`${hours}:${minutes}`);\r\n     }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container onClick={onClick} active={active}>\r\n      <img src={data.image} alt=\"avatar\"/>\r\n      <Content>\r\n        <Line>\r\n          <Name>\r\n            <p title={data.title}>{data.title}</p>\r\n          </Name>\r\n          <Hour>{time}</Hour>\r\n        </Line>\r\n\r\n        <Line>\r\n          <LastMessage>\r\n            <p title={data.lastMessage}>{data.lastMessage}</p>\r\n          </LastMessage>\r\n        </Line>\r\n      </Content>\r\n    </Container>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  background-color: var(--backgroundChat);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  border-bottom: 6px solid var(--primary-light);\r\n\r\n  img {\r\n    width: 250px;\r\n    height: auto;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 32px;\r\n    color: var(--text-medium);\r\n    font-weight: normal;\r\n    margin-top: 30px;\r\n    text-align: center;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 14px;\r\n    color: var(--text-submedium);\r\n    font-weight: normal;\r\n    margin-top: 20px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nexport function ChatIntro() {\r\n  return (\r\n    <Container>\r\n      <img src=\"https://i.ibb.co/k3dQK5K/web-intro.jpg\" alt=\"cellphone\"/>\r\n      <h1>Mantenha seu celular conectado</h1>\r\n      <h2>O WhatsApp conecta ao seu telefone para sincronizar suas mensagens. Para reduzir o uso de dados, conecte seu telefone a uam rede Wi-Fi.</h2>\r\n    </Container>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  margin-bottom: 10px;\r\n  display: flex;\r\n  justify-content: ${(props) => props.isAuthor ? 'flex-end' : 'flex-start'};\r\n`;\r\n\r\nexport const MessageContent = styled.div`\r\n  background-color: var(--shape);\r\n  border-radius: 10px;\r\n  box-shadow: 0 1px 1px var(--divide-medium);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 3px;\r\n  max-width: 90%;\r\n  background-color: ${(props) => props.isAuthor ? 'var(--messageAuthor)' : 'var(--shape)'};\r\n`;\r\nexport const MessageText = styled.div`\r\n  font-size: 14px;\r\n  margin: 5px 40px 5px 5px;\r\n`;\r\nexport const MessageDate = styled.div`\r\n  font-size: 11px;\r\n  color: var(--text-light);\r\n  margin-right: 5px;\r\n  text-align: right;\r\n  height: 15px;\r\n  margin-top: -15px;\r\n`;","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  Container,\r\n  MessageContent,\r\n  MessageText,\r\n  MessageDate,\r\n} from './styles';\r\n\r\nexport function MessageItem({data, user}) {\r\n  const [time, setTime] = useState('');\r\n\r\n  useEffect(() => {\r\n     if(data.date > 0) {\r\n        let d = new Date(data.date.seconds * 1000);\r\n        let hours = d.getHours();\r\n        let minutes = d.getMinutes();\r\n\r\n        hours = hours < 10 ? '0'+hours : hours;\r\n        minutes = minutes < 10 ? '0'+minutes : minutes;\r\n\r\n        setTime(`${hours}:${minutes}`);\r\n     }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container isAuthor={user.id === data.author}>\r\n      <MessageContent isAuthor={user.id === data.author}>\r\n        <MessageText>\r\n          {data.body}\r\n        </MessageText>\r\n        <MessageDate>\r\n          {time}\r\n        </MessageDate>\r\n      </MessageContent>\r\n    </Container>\r\n  )\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  height: 60px;\r\n  border-bottom: 1px solid var(--divide-medium);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const HeaderInfo = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  flex: 1;\r\n \r\n  img {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    margin: 0 15px;\r\n  }\r\n\r\n  div {\r\n    font-size: 17px;\r\n    color: var(--text-dark);\r\n    max-height: 50px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const HeaderButtons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 15px;\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  transition: all ease 0.3s;\r\n\r\n  svg {\r\n    color: ${(props) => props.colorActive ? props.colorActive : 'var(--iconColor)'};\r\n  }\r\n`;\r\n\r\nexport const Body = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  background-color: var(--backgroundBodyChat);\r\n  background-size: cover;\r\n  background-position: top;\r\n  background-image: url('https://i.ibb.co/xGLfpMn/background-whatsapp-back-chat.png');\r\n  padding: 20px 30px;\r\n`;\r\n\r\nexport const EmojiArea = styled.div`\r\n  height: 200px;\r\n  overflow-y: hidden;\r\n  transition: all ease 0.3s;\r\n\r\n  aside {\r\n    width: auto;\r\n    background: none;\r\n  }\r\n\r\n  & .emoji-picker-react .emoji-group:before {\r\n    background: none;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.div`\r\n  height: 62px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LeftFooterContent = styled.div`\r\n  display: flex;\r\n  margin: 0 15px;\r\n`;\r\n\r\nexport const InputArea = styled.div`\r\n  flex: 1;\r\n\r\n  input {\r\n    width: 100%;\r\n    height: 40px;\r\n    border: 0;\r\n    outline: 0;\r\n    background: var(--shape);\r\n    border-radius: 20px;\r\n    font-size: 15px;\r\n    color: var(--inputChat);\r\n    padding: 0 15px;\r\n  }\r\n`;\r\n\r\nexport const RightFooterContent = styled.div`\r\n  display: flex;\r\n  margin: 0 15px;\r\n`;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport EmojiPicker from 'emoji-picker-react';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nimport Api from '../../Api';\r\n\r\nimport { MessageItem } from '../MessageItem';\r\n\r\nimport {\r\n  Container,\r\n  Header,\r\n  HeaderInfo,\r\n  HeaderButtons,\r\n  Button,\r\n  Body,\r\n  EmojiArea,\r\n  Footer,\r\n  LeftFooterContent,\r\n  InputArea,\r\n  RightFooterContent\r\n} from './styles';\r\n\r\nexport function ChatWindow({user, data}) {\r\n\r\n  const body = useRef();\r\n\r\n  let recognition = null;\r\n  let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n  if (SpeechRecognition !== undefined) {\r\n    recognition = new SpeechRecognition();\r\n  }\r\n\r\n  const [emojiOpen, setEmojiOpen] = useState(false);\r\n  const [text, setText] = useState('');\r\n  const [listening, setListening] = useState(false);\r\n  const [list, setList] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n\r\n  function handleEmojiClick(e, emojiObject) {\r\n    setText(text + emojiObject.emoji);\r\n  }\r\n\r\n  function handleOpenEmoji() {\r\n    setEmojiOpen(true);\r\n  }\r\n\r\n  function handleCloseEmoji() {\r\n    setEmojiOpen(false);\r\n  }\r\n\r\n  function handleMicClick() {\r\n    if (recognition !== null) {\r\n      \r\n      recognition.onstart = () => {\r\n        setListening(true);\r\n      }\r\n      recognition.onend = () => {\r\n        setListening(false);\r\n      }\r\n      recognition.onresult = (e) => {\r\n        setText(e.results[0][0].transcript);\r\n      }\r\n\r\n      recognition.start();\r\n    }\r\n  }\r\n\r\n  function handleInputKeyUp(e) {\r\n    if (e.keyCode === 13){\r\n      handleSendClick();\r\n    }\r\n  }\r\n\r\n  function handleSendClick() {\r\n    if(text !== 1) {\r\n      Api.sendMessage(data, user.id, 'text', text, users);\r\n      setText('');\r\n      setEmojiOpen(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setList([]);\r\n    let unsub = Api.onChatContent(data.chatId, setList, setUsers);\r\n    return unsub;\r\n  }, [data.chatId]);\r\n\r\n  useEffect(() => {\r\n    if(body.current.scrollHeight > body.current.offsetHeight) {\r\n      body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight;\r\n    }\r\n  }, [list]);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <HeaderInfo>\r\n          <img src={data.image} alt=\"avatar\"/>\r\n          <div>{data.title}</div>\r\n        </HeaderInfo>\r\n\r\n        <HeaderButtons>\r\n          <Button>\r\n            <SearchIcon />\r\n          </Button>\r\n          <Button>\r\n            <AttachFileIcon />\r\n          </Button>\r\n          <Button>\r\n            <MoreVertIcon />\r\n          </Button>\r\n        </HeaderButtons>\r\n      </Header>\r\n\r\n      <Body ref={body}>\r\n        {list.map((item, key) =>\r\n          <MessageItem \r\n            key={key}\r\n            data={item}\r\n            user={user}\r\n          />\r\n        )}\r\n      </Body>\r\n\r\n      <EmojiArea style={{height: emojiOpen ? '200px' : '0px'}}>\r\n        <EmojiPicker \r\n          onEmojiClick={handleEmojiClick}\r\n          disableSearchBar\r\n          disableSkinTonePicker\r\n        />\r\n      </EmojiArea>\r\n\r\n      <Footer>\r\n        <LeftFooterContent>\r\n          <Button \r\n            style={{width: emojiOpen ? '40px' : 0}}\r\n            onClick={handleCloseEmoji}\r\n          >\r\n            <CloseIcon />\r\n          </Button>\r\n\r\n          <Button onClick={handleOpenEmoji} colorActive={emojiOpen ? 'var(--primary-active)' : 'var(--iconColor)'}>\r\n            <InsertEmoticonIcon/>\r\n          </Button>\r\n        </LeftFooterContent>\r\n\r\n        <InputArea>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Digite uma mensagem\"\r\n            value={text}\r\n            onChange={e => setText(e.target.value)}\r\n            onKeyUp={handleInputKeyUp}\r\n          />\r\n        </InputArea>\r\n\r\n        <RightFooterContent>\r\n          {text === '' ?\r\n            <Button onClick={handleMicClick} colorActive={listening ? 'var(--iconMicActive)' : 'var(--iconColor)'}>\r\n              <MicIcon />\r\n            </Button>\r\n          :\r\n            <Button onClick={handleSendClick}>\r\n              <SendIcon />\r\n            </Button>\r\n          }\r\n        </RightFooterContent>\r\n      </Footer>\r\n    </Container>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 35%;\r\n  max-width: 415px;\r\n  position: fixed;\r\n  left: ${(props) => props.show ? 0 : '-415px'};\r\n  top: 0;\r\n  bottom: 0;\r\n  background-color: var(--shape);\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid var(--divide);\r\n\r\n  transition: all ease 0.5s;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  background-color: var(--primary);\r\n  align-items: center;\r\n  padding: 60px 15px 15px 15px;\r\n`;\r\n\r\nexport const BackButton = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    color: var(--shape);\r\n  }\r\n`;\r\n\r\nexport const HeaderTitle = styled.div`\r\n  font-size: 19px;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  flex:1;\r\n  font-weight: bold;\r\n  margin-left: 20px;\r\n  color: var(--shape);\r\n\r\n  flex-wrap: wrap;\r\n  min-width: 0;\r\n\r\n  p {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const List = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const Contact = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n\r\n  img {\r\n    height: 50px;\r\n    width: 50px;\r\n    border-radius: 50%;\r\n    margin-right: 15px;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: var(--background-hover);\r\n  }\r\n`;\r\n\r\nexport const ContactName = styled.div`\r\n  font-size: 17px;\r\n  color: var(--text-dark);\r\n\r\n  flex-wrap: wrap;\r\n  min-width: 0;\r\n\r\n  p {\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    margin: 0;\r\n  }\r\n`;","import React, { useState, useEffect } from 'react';\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport Api from '../../Api';\r\n\r\nimport {\r\n  Container,\r\n  Header,\r\n  BackButton,\r\n  HeaderTitle,\r\n  List,\r\n  Contact,\r\n  ContactName\r\n} from './styles';\r\n\r\nexport function NewChat({\r\n  user,\r\n  chatlist,\r\n  show,\r\n  setShow\r\n}) {\r\n  const [list, setList] = useState([]);\r\n\r\n  function handleClose() {\r\n    setShow(false);\r\n  }\r\n\r\n  async function addNewChat(user2) {\r\n    await Api.addNewChat(user, user2);\r\n\r\n    handleClose();\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getList = async () => {\r\n      if(user !== null) {\r\n        let results = await Api.getContactList(user.id);\r\n        setList(results);\r\n      }\r\n    }\r\n    getList();\r\n  }, [user])\r\n\r\n  return (\r\n    <Container show={show}>\r\n      <Header>\r\n        <BackButton onClick={handleClose}>\r\n          <ArrowBackIcon />\r\n        </BackButton>\r\n        <HeaderTitle>\r\n          <p>\r\n            Nova Conversa\r\n          </p> \r\n        </HeaderTitle>\r\n      </Header>\r\n      <List>\r\n        {list.map((item, key) => (\r\n          <Contact \r\n            onClick={() => addNewChat(item)}\r\n            key={key}\r\n          >\r\n            <img src={item.avatar} alt='avatar'/>\r\n            <ContactName title={item.name}>\r\n              <p>\r\n                {item.name}\r\n              </p>\r\n            </ContactName>\r\n          </Contact>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  height: 100Vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from 'react';\r\nimport { Container } from './styles';\r\nimport Api from '../../Api';\r\n\r\nexport function Login({onReceive}) {\r\n  async function handleFacebookLogin(){\r\n    let result = await Api.fbPopup();\r\n\r\n    if (result) {\r\n      onReceive(result.user);\r\n    }else {\r\n      alert(\"Erro!\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <button onClick={handleFacebookLogin}>Logar com Facebook</button>\r\n    </Container>\r\n  )\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n  background-color: var(--background);\r\n`;\r\n\r\nexport const SideBar = styled.div`\r\n  width: 35%;\r\n  max-width: 414px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-right: 1px solid var(--divide);\r\n`;\r\n\r\nexport const SideBarHeader = styled.div`\r\n  height: 60px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  padding: 0 15px;\r\n\r\n  img {\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const SideBarHeaderButtons = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const HeaderButton = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    color: var(--iconColor);\r\n  }\r\n`;\r\n\r\nexport const Search = styled.div`\r\n  background-color: var(--background-light);\r\n  border-bottom: 1px solid var(--divide-light);\r\n  padding: 5px 15px;\r\n`;\r\n\r\nexport const SearchInput = styled.div`\r\n  background-color: var(--shape);\r\n  height: 40px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n\r\n  input {\r\n    flex: 1;\r\n    width: 100%;\r\n    border: 0;\r\n    outline: 0;\r\n    background-color: transparent;\r\n    margin-left: 10px;\r\n  }\r\n\r\n  svg {\r\n    color: var(--iconColor);\r\n    font-size: small;\r\n  }\r\n`;\r\n\r\nexport const ChatList = styled.div`\r\n  flex: 1;\r\n  background-color: var(--shape);\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const ContentArea = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport Api from '../../Api';\r\n\r\nimport { ChatListItem } from '../../components/ChatListItem';\r\nimport { ChatIntro } from '../../components/ChatIntro';\r\nimport { ChatWindow } from '../../components/ChatWindow';\r\nimport { NewChat } from '../../components/NewChat';\r\nimport { Login } from '../../pages/Login';\r\n\r\nimport {\r\n  Container,\r\n  SideBar,\r\n  SideBarHeader,\r\n  SideBarHeaderButtons,\r\n  HeaderButton,\r\n  Search,\r\n  SearchInput,\r\n  ChatList,\r\n  ContentArea,\r\n} from './styles';\r\n\r\nexport function Dashboard() {\r\n\r\n  const [chatlist, setChatlist] = useState([]);\r\n  const [activeChat, setActiveChat] = useState({});\r\n  const [user, setUser] = useState(null);\r\n  const [showNewChat, setShowNewChat] = useState(false);\r\n\r\n  function handleOpenNewChat() {\r\n    setShowNewChat(true);\r\n  }\r\n\r\n  async function handleLoginData(u) {\r\n    let newUser = {\r\n      id: u.uid,\r\n      name: u.displayName,\r\n      avatar: u.photoURL\r\n    };\r\n    await Api.addUser(newUser);\r\n    setUser(newUser);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(user!==null){\r\n      let unsub = Api.onChatList(user.id, setChatlist);\r\n      return unsub;\r\n    }\r\n  }, [user]);\r\n\r\n  if (user === null) {\r\n    return (<Login onReceive={handleLoginData}/>)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <SideBar>\r\n        <NewChat\r\n          chatlist={chatlist}\r\n          user={user}\r\n          show={showNewChat}\r\n          setShow={setShowNewChat}\r\n        />\r\n\r\n        <SideBarHeader>\r\n          <img src={user.avatar} alt=\"avatar\"/>\r\n          <SideBarHeaderButtons>\r\n            <HeaderButton>\r\n              <DonutLargeIcon/>\r\n            </HeaderButton>\r\n            <HeaderButton onClick={handleOpenNewChat}>\r\n              <ChatIcon/>\r\n            </HeaderButton>\r\n            <HeaderButton>\r\n              <MoreVertIcon/>\r\n            </HeaderButton>\r\n          </SideBarHeaderButtons>\r\n        </SideBarHeader>\r\n\r\n        <Search>\r\n          <SearchInput>\r\n            <SearchIcon/>\r\n            <input type=\"search\" placeholder=\"Procurar ou começar uma nova conversa\"/>\r\n          </SearchInput>\r\n        </Search>\r\n\r\n        <ChatList>\r\n          {chatlist.map((item, key) => (\r\n           <ChatListItem \r\n            key={key}\r\n            data={item}\r\n            active={activeChat.chatId === item.chatId}\r\n            onClick={() => setActiveChat(item)}\r\n           /> \r\n          ))}\r\n        </ChatList>\r\n      </SideBar>\r\n\r\n      <ContentArea>\r\n        {activeChat.chatId === undefined ?\r\n          <ChatIntro /> :\r\n          <ChatWindow \r\n            user={user}\r\n            data={activeChat}\r\n          />\r\n        }\r\n      </ContentArea>\r\n    </Container>\r\n  );\r\n}","import { GlobalStyle } from \"./styles/global\";\n\nimport { Dashboard } from \"./pages/Dashboard\";\n\nexport function App() {\n  return (\n    <>\n      <Dashboard />\n      <GlobalStyle />\n    </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}